# ----------------------------------------------------------------------
# This configuration file uses the Adjustable-Block Encoding CPA
# for predicate analysis with CEGAR as described in
# "Predicate Abstraction with Adjustable-Block Encoding" (Beyer et al.).
# It is configured for abstractions at loop heads, similar to LBE but
# with function inlining.
# The searched state space is restricted by an assumption automaton.
# ----------------------------------------------------------------------

#include ../predicateAnalysis.properties

analysis.collectAssumptions = true
analysis.stopAfterError = false

counterexample.continueAfterInfeasibleError = false

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA

assumptions.automatonFile = AssumptionAutomatonAfterPredAbs.txt
cmbc.timelimit = 15s
specification = ../my-specification/test-feasible.spc, ../specification/AssumptionGuidingAutomaton.spc, /home/rcastano/files/tools/cpachecker/fork/outputs/my-programs/drivers64+mem_slave_tlm.1/mem_slave_tlm.1+loop.BUG.c/outputDir10800/test-configs/generate/explicitAnalysis-100s-generate-assumption.properties/AssumptionAutomaton.txt

limits.time.cpu = 36000s
