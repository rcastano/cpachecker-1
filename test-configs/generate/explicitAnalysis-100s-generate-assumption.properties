# ------------------------------------------------------------------
# This configuration file uses explicit analysis of local integer
# variables in a model-checking configuration.
# Found errors are cross-checked by CBMC.
# An assumption is generated for all states which cannot be verified.
# ------------------------------------------------------------------

analysis.collectAssumptions = true
analysis.checkCounterexamples = true

counterexample.continueAfterInfeasibleError = false

# ARTCPA is needed for counterexample analysis
cpa = cpa.arg.ARGCPA

# FunctionPointerCPA provides handling of function pointers
ARGCPA.cpa = cpa.composite.CompositeCPA
# ARGCPA.cpa = cpa.functionpointer.FunctionPointerCPA

# FunctionPointerCPA.cpa = cpa.composite.CompositeCPA

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.value.ValueAnalysisCPA, cpa.assumptions.storage.AssumptionStorageCPA, cpa.conditions.global.GlobalConditionsCPA

# this automaton defines which locations are the error locations
specification = ../specification/default.spc

# Set time limit to 100 seconds
limits.time.cpu = 10800
cbmc.timelimit = 1080s

assumptions.automatonFile = AssumptionAutomaton.txt
